name: Platform Tests & Build
on: [push]

jobs:
  platform_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.19]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
    - uses: WillAbides/setup-go-faster@v1.7.0
      with:
        go-version: ${{ matrix.go-version }}

#    - name: Get dependencies
#      run: sudo apt-get update && sudo apt-get install bc wget
 #     if: ${{ runner.os == 'Linux' }}

    - name: Tests
      run: go test -tags ci ./...

    - name: Wayland Tests
      run: go test -tags ci,wayland ./...
      if: ${{ runner.os == 'Linux' }}

    - name: Build filelist
      run: |
        cd rof
        echo "GITHUB_ACTION_PATH ${GITHUB_ACTION_PATH}"
        echo "GITHUB_ACTION_REPOSITORY ${GITHUB_ACTION_REPOSITORY}"
        echo "GITHUB_API_URL ${GITHUB_API_URL}"
        echo "GITHUB_ENV ${GITHUB_ENV}"
        echo "GITHUB_PATH ${GITHUB_PATH}"
        echo "GITHUB_REPOSITORY_OWNER ${GITHUB_REPOSITORY_OWNER}"
        echo "# Optional. If you host files elsewhere, place it below e.g. https://example.com/" > tmp.txt
        wget https://github.com/xackery/filelistbuilder/releases/download/latest/filelistbuilder-linux-x64
        chmod +x filelistbuilder-linux-x64
        echo -e "client: rof\n" > filelistbuilder.yml
        echo "downloadprefix: https://raw.githubusercontent.com/$GITHUB_ACTION_REPOSITORY/assets/rof" >> filelistbuilder.yml
        ./filelistbuilder-linux-x64
        cd .. && cmp --silent assets/url.txt rof/tmp.txt || echo "https://github.com/$GITHUB_ACTION_REPOSITORY/releases/download/rof/filelist_rof.yml" > assets/url.txt
        echo "final url:"
        cat assets/url.txt
      if: ${{ runner.os == 'Linux' }}

    - name: Build binary
      run: |
        go install github.com/fyne-io/fyne-cross@latest
        make build-windows

    - name: Update coverage
      run: |
        GO111MODULE=off go get github.com/mattn/goveralls
        set -e
        go test -tags ci -covermode=atomic -coverprofile=coverage.out ./...
        coverage=`go tool cover -func coverage.out | grep total | tr -s '\t' | cut -f 3 | grep -o '[^%]*'`
        if (( $(echo "$coverage < 10" | bc) )); then echo "Test coverage lowered"; exit 1; fi
      if: ${{ runner.os == 'Linux' }}

    - name: Update PR Coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: coverage.out
      if: ${{ runner.os == 'Linux' && matrix.go-version == '1.19' }}

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: false
        title: "Build"
        files: |
          bin/eqemupatchergo.exe
          rof/filelist_rof.yml
          rof/patch.zip
